<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd"
       default-lazy-init="true">

    <description>Shiro安全配置</description>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO" ref="sessionDAO" />
        <property name="sessionListeners">
            <list>
                <bean class="com.yq.other.listener.SessionListenerLogger"/>
            </list>
        </property>
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
    </bean>

    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO" />

    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
        <property name="sessionManager" ref="sessionManager" />
        <property name="interval" value="900000"/>
    </bean>

    <!-- Shiro's main business-tier object for web-enabled applications -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="authenticator">
            <bean class="com.yq.service.MultiLoginAuthenticator"/>
        </property>
        <property name="authenticator.authenticationListeners">
            <set>
                <bean class="com.yq.other.listener.AuthenticationListenerLogger"/>
            </set>
        </property>
        <property name="sessionManager" ref="sessionManager" />
        <property name="realms">
            <list>
                <bean name="userRealm" class="com.yq.service.UserRealm"/>
            </list>
        </property>
        <property name="sessionMode" value="http" />
    </bean>

    <!-- Shiro Filter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login_err"/>
        <property name="unauthorizedUrl" value="/unauthorized_err"/>
        <property name="filters">
            <map>
                <entry key="userLogin" value-ref="userLogin"/>
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /admins/sign_in = anon
                /admins/sign_out = anon
                /admins/db/normal_managers = roles[super_manager]
                /admins/db/normal_managers/** = roles[super_manager]
                /admins/permissions/normal_managers/** = roles[super_manager]
                /admins/** = roles[admin_normal]

                /doctors/sign_in = anon
                /doctors/sign_out = anon
                /doctors/sign_up = anon
                /doctors/reset_password = anon
                /doctors/** = roles[doctor_normal]

                /manufactories/sign_in = anon
                /manufactories/sign_out = anon
                /manufactories/sign_up = anon
                /manufactories/reset_password = anon
                /manufactories/** = roles[factory_normal]

                /common/measurements/** = authc

                /common/** = anon
                /static/** = anon
                /api/** = anon
                /favicon.ico = anon
                /** = anon
            </value>
        </property>
    </bean>

    <bean id="userLogin" class="org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter">
        <property name="loginUrl" value="/user/login.do"/>
        <property name="successUrl" value="/"/>
    </bean>

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- AOP式方法级权限检查  -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
</beans>